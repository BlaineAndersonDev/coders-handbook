*{
  margin: 0;
  padding: 0;
}
body, html{
  margin: 0;
  padding: 0;
  text-align: center;
  background: #323232;
  color: white;
  height: 100%;
  width: 100%;
}
// Code WITH Comments: (UNcomment to see in action.)
// #rs_flex_wrapper{
//   // Regular CSS:
//   text-align: center;
//   background: #323232;
//   color: white;
//   min-height: 100vh;
//   min-width: 100%;
//   // Flex-box example:
//     // Activates all Flex based CSS options.
//       display: flex;
//     // Horizontal Center Alignment for all objects inside this container.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-6
//       justify-content: center;
//     // Vertical Center Alignment for all objects inside this container.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-7
//       align-items: center;
//     // This defines the direction that Flex items move in.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-3
//       // flex-direction: [ row || column || row-reverse || column-reverse ] ;
//     // By default, Flex items will all try to fit onto one line. This alters that.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-5
//       // flex-wrap: [ wrap || nowrap || wrap-reverse ] ;
//     // This is a shorthand flex-direction and flex-wrap properties.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-5
//       flex-flow: column wrap;
// }
// .rs_flex_group_container{
//   // Regular CSS:
//   width: 100%;
//   height: 100%;
//   // Flex-box example:
//     // This allows the item to grow as needed to fill the empty space around it.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-10
//       // flex-grow: 1;{}
//     // This allows the item to shrink as needed to allow space for other items around it.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-13
//       // flex-shrink: 1;
//     // This defines the default size of an element before the remaining space is distributed.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-13
//       // flex-basis: 1;
//     // This is the shorthand for flex-grow, flex-shrink and flex-basis combined.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-13
//     // flex: <flex-grow> <flex-shrink> <flex-basis>;
//       flex: 1 1 5%;
//     // NOTE: Keep in mind that if you have to add Flex as the display for EACH container that will be Flexing items.
//     // Activates all Flex based CSS options.
//       display: flex;
//     // Horizontal Center Alignment for all objects inside this container.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-6
//       justify-content: center;
//     // Vertical Center Alignment for all objects inside this container.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-7
//       align-items: center;
//     // This is a shorthand flex-direction and flex-wrap properties.
//     // https://css-tricks.com/snippets/css/a-guide-to-flexbox/#article-header-id-5
//       flex-flow: row nowrap;
// }
// .rs_flex_group_title_item{
//   // Using 'margin' & 'flex' to have a set number of items per row is explained here:
//   // https://stackoverflow.com/a/45384426/10090036
//   // Regular CSS:
//     border: 1px lightgreen solid;
//     margin: 5px;
//   // Flex-box example:
//     // I've used a calculation to get the needed amount divided from 100% width, minus a set amount for margin.
// flex: 1 0 calc(100% * (1/3) - 15px);
// }
// .rs_flex_group_color_item{ //
//   border: 1px lightblue solid;
//   margin: 2px;
//     // I've used a calculation to get the needed amount divided from 100% width, minus a set amount for margin.
//   flex: 1 0 calc(100% * (1/5) - 10px);
// }
// .rs_flex_group_dog_item{
//   // Using min/max height and width allow the images to remain undistorted.
//   min-height: 250px;
//   min-width: 250px;
//   max-height: 500px;
//   max-width: 500px;
//   border: 1px white solid;
//   border-radius: 20px;
//   margin: 10px;
//   // I've used a calculation to get the needed amount divided from 100% width, minus a set amount for margin, the border and 1 extra pixel for good measure.
//   flex: 1 0 calc(100% * (1/2) - 25px);
// }

// Code WITHOUT Comments:
#rs_flex_wrapper{
  text-align: center;
  background: #323232;
  color: white;
  min-height: 100vh;
  min-width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: column wrap;
}
.rs_flex_group_container_row{
  width: 100%;
  height: 100%;
  flex: 1 0 5%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
  border-bottom: 3px white solid;
}
.rs_flex_group_container_column{
  width: 100%;
  height: 100%;
  flex: 1 0 5%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: column wrap;
}
.rs_flex_page_overview_small{
  font-size: 3em;
  text-shadow: 2px 2px 8px black;
  margin-bottom: 10px;
}
.rs_flex_page_overview_large{
  font-size: 3.5em;
  text-shadow: 2px 2px 8px black;
  margin-bottom: 5px;
}
.rs_flex_page_text{
  font-size: 2em;
  text-shadow: 2px 2px 8px black;
}
.rs_flex_group_title_item{ //
  border: 1px lightgreen solid;
  margin: 5px;
  flex: 1 0 calc(100% * (1/3) - 15px);
}
.rs_flex_group_color_item{ //
  border: 1px lightblue solid;
  margin: 2px;
  flex: 1 0 calc(100% * (1/5) - 10px);
}
.rs_flex_group_dog_item{
  min-height: 250px;
  min-width: 250px;
  max-height: 500px;
  max-width: 500px;
  border: 1px white solid;
  border-radius: 20px;
  margin: 10px;
  flex: 1 0 calc(100% * (1/2) - 25px);
}
.rs_flex_group_dog_item_small_link{
  border-radius: 20px;
  margin: 5px;
  margin: 0 auto;
  flex: 1 0 calc(100% * (1/4) - 6px);
}
.rs_flex_group_dog_item_small_link:hover{
  animation: shine2 1.5s ease-in-out;
}
  @keyframes shine2 {
    0% {
      filter:contrast(100%);
    }
    20% {
      filter:contrast(300%);
    }
    100% {
      filter:contrast(100%);
    }
  }
.rs_flex_group_dog_item_small{
  min-height: 75px;
  min-width: 75px;
  max-height: 150px;
  max-width: 150px;
  border: 1px white solid;
  border-radius: 20px;
}

.github_flex_links_container{
  border-bottom: 3px white solid;
  border-radius: 20px;
  margin: 5px;
  padding: 20px;
  width: 70%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: row wrap;
}
.github_flex_link{
  text-decoration: none;
  border: 2px white solid;
  color: white;
  font-size: 1em;
  padding: 10px;
  margin: 10px;
  flex: 1 0 calc(100% * (1/3) - 90px);
  transition:
    border 0.5s ease,
    color 0.5s ease;
}
.github_flex_link:hover{
  color: lightblue;
  border: 2px lightblue solid;
}
